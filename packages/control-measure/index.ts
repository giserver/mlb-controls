import { dom } from 'wheater';
import { MapControl, MapControlOptions, TControlPostion } from '@mlb-controls/common';
import { DrawType } from "@mlb-controls/draw";
import { ExtendControl } from '@mlb-controls/extend';
import { IMeasureControlLanguage } from "./lang";
import { MeasureManager, MeasureManagerOptions } from "./manager";

import "./index.css";
import "@mlb-controls/extend/dist/style.css";


export interface MeasureControlOptions extends MapControlOptions<IMeasureControlLanguage>, MeasureManagerOptions {
    /**
    * 对应组件在地图上显示的位置，必须通过设置此值修改组件位置I（禁止使用map.addControl(xxx, "bottom-left")）
    * 
    * 默认：”top-right“
    * 
    * 该值用于确定弹出组件显示的元素相对于弹出组件按钮的位置
    */
    position?: TControlPostion;
}

export class MeasureControl extends MapControl<IMeasureControlLanguage> {

    private _manager: MeasureManager

    get manager() {
        return this._manager;
    }

    /**
     *
     */
    constructor(private options: MeasureControlOptions) {
        super(options, {
            ending: "终点",
            MM: "毫米",
            CM: "厘米",
            M: "米",
            KM: "千米",
            M2: "平方米",
            KM2: "平方千米",
            MU: "亩"
        });

        options.position ??= "top-right";
    }

    createElement(map: mapboxgl.Map): HTMLElement {
        this._manager = new MeasureManager(map, this.options, this.lang);

        const clickMeasureItem = (e: HTMLElement, type: DrawType) => {
            const current = container.querySelector(".mlb-ctrl-measure>.active") as HTMLElement;
            if (current) {
                current.classList.remove('active');

                if (current === e) {
                    this._manager.stop();
                    return;
                }
            }

            e.classList.add("active");
            this._manager.start(type);
        }

        const container = dom.createHtmlElement('div',
            ["mlb-ctrl-measure"],
            [
                dom.createHtmlElement('div', [], [], {
                    onInit: e => {
                        e.innerHTML = `<svg width="20" height="20" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1369">
                        <g fill="none" stroke="black">
                        <path stroke-width="60" d="M512 427.023m-90 0a90 90 0 1 0 180 0 90 90 0 1 0-180 0Z" fill="" p-id="1370"></path>
                        <path stroke-width="60" d="M512 910.402c-19.14 0-37.482-5.854-53.042-16.929-14.063-10.01-24.926-23.596-31.589-39.46L255.043 585.177l-0.154-0.25C225.522 537.209 210 482.605 210 427.021c0-80.667 31.414-156.506 88.454-213.546S431.333 125.021 512 125.021s156.506 31.414 213.546 88.454C782.587 270.515 814 346.354 814 427.021c0 55.849-15.655 110.671-45.274 158.539l-0.264 0.419-172.081 268.716c-6.755 15.726-17.66 29.176-31.704 39.055-15.485 10.895-33.7 16.652-52.677 16.652zM309.246 551.141l175.494 273.78 1.194 3.197c4.149 11.107 14.381 18.284 26.066 18.284 11.584 0 21.791-7.071 26.004-18.015l1.165-3.028L714.43 551.678C737.701 513.983 750 470.884 750 427.021c0-63.572-24.756-123.339-69.709-168.292-44.952-44.951-104.719-69.708-168.291-69.708s-123.339 24.756-168.292 69.708S274 363.449 274 427.021c0 43.64 12.186 86.552 35.246 124.12z" p-id="1371"></path>
                        </g></svg>`
                    },
                    onClick: (_, e) => {
                        clickMeasureItem(e, "Point");
                    }
                }),
                dom.createHtmlElement('div', [], [], {
                    onInit: e => {
                        e.innerHTML = `<svg width="20" height="20" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="745">
                        <g fill="none" stroke="black">
                        <path stroke-width="20" d="M413.583 452.419L363.1 503.368l27.576 27.576a35.548 35.548 0 0 0 50.484 0 35.548 35.548 0 0 0 0-50.483l-27.577-28.042z m-91.146 91.15l-50.483 50.484 27.576 27.576a35.548 35.548 0 0 0 50.483 0 35.548 35.548 0 0 0 0-50.483l-27.576-27.576z m-91.146 91.147L180.808 685.2l27.576 27.577a35.548 35.548 0 0 0 50.483 0 35.548 35.548 0 0 0 0-50.484l-27.576-27.576zM687.022 178.98l-50.483 50.483 27.576 27.576a35.548 35.548 0 0 0 50.483 0 35.548 35.548 0 0 0 0-50.483l-27.576-27.576zM504.73 361.272l-50.484 50.95 27.577 27.576a35.548 35.548 0 0 0 50.483 0 35.548 35.548 0 0 0 0-50.483l-27.576-28.043z" fill="#333333" p-id="746"></path>
                        <path stroke-width="20" d="M959.995 279.946L747.786 67.738a35.548 35.548 0 0 0-50.483 0L64.425 700.62a35.548 35.548 0 0 0 0 50.483l211.743 211.743a35.548 35.548 0 0 0 50.483 0l633.344-632.423c13.553-14.023 13.553-36.46 0-50.478zM301.87 887.122l-161.26-161.26 35.523-35.522 146.77-146.77 40.663-40.663 50.483-50.483 40.663-40.663 50.484-50.484 40.663-40.663 50.483-50.483 40.663-40.663 50.483-50.483 35.523-35.523 160.793 161.726L301.87 887.122z" fill="#333333" p-id="747"></path>
                        <path stroke-width="20" d="M595.876 270.126l-50.483 50.483 27.576 27.577a35.548 35.548 0 0 0 50.483 0 35.548 35.548 0 0 0 0-50.484l-27.576-27.576z" fill="#333333" p-id="748"></path>
                        </g></svg>`
                    },
                    onClick: (_, e) => {
                        clickMeasureItem(e, "LineString");
                    }
                }),
                dom.createHtmlElement('div', [], [], {
                    onInit: e => {
                        e.innerHTML = `<svg width="20" height="20" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1188">
                        <g fill="none" stroke="black">
                            <path stroke-width="18" d="M898.56 284.672c15.36 0 27.648-12.288 27.648-27.136V126.976c0-15.36-12.288-27.648-27.648-27.648H768c-15.36 0-27.648 12.288-27.648 27.648v29.696H286.208v-29.696c0-15.36-12.288-27.648-27.648-27.648H128c-15.36 0-27.648 12.288-27.648 27.648v130.048c0 15.36 12.288 27.648 27.648 27.648h31.744v452.096H128c-15.36 0-27.648 12.288-27.648 27.648v130.56c0 15.36 12.288 27.648 27.648 27.648h130.56c14.848 0 27.136-12.288 27.648-27.648v-33.28h454.144v33.28c0 15.36 12.288 27.648 27.648 27.648h130.56c15.36 0 27.648-12.288 27.648-27.648v-130.56c0-15.36-12.288-27.648-27.648-27.648H865.28V284.672h33.28zM155.648 229.376V154.112h75.264v75.264H155.648z m75.264 637.952H155.648v-75.264h75.264v75.264z m509.44-102.912v33.28H286.208v-33.28c0-15.36-12.288-27.648-27.648-27.648h-34.816V284.672h34.816c14.848 0 27.136-12.288 27.648-27.136v-36.864h454.144v36.352c0 15.36 12.288 27.648 27.648 27.648h33.28v452.096H768c-15.36 0-27.648 12.288-27.648 27.648z m130.56 27.648v75.264h-75.264v-75.264h75.264zM795.648 229.376V154.112h75.264v75.264h-75.264z" fill="#333333" p-id="1189"></path>
                            <path stroke-width="18" d="M680.96 383.488c17.92-8.192 47.616-21.504 56.832-50.176 4.608-14.336 2.56-30.72-5.632-44.544-8.192-13.824-20.992-23.552-35.84-26.624-27.648-6.144-54.784 8.704-68.096 35.84-4.608 9.728-1.024 20.992 8.704 25.6 9.728 4.608 20.992 1.024 25.6-8.704 5.632-11.776 15.36-17.408 25.6-15.36 5.632 1.536 9.216 6.144 10.752 8.704 3.072 4.608 3.584 10.24 2.56 13.824-3.584 11.264-20.48 19.968-35.84 26.624-32.256 14.336-35.328 57.344-35.328 61.952-0.512 5.12 1.536 10.24 5.12 13.824 3.584 4.096 8.704 6.144 13.824 6.144h70.656c10.24 0 18.944-9.216 18.944-19.456s-8.192-18.944-18.944-18.944h-46.592c2.048-3.584 4.608-7.168 7.68-8.704zM516.096 377.344H355.328c-13.824 0-24.576 11.264-24.576 24.576v242.688c0 13.824 11.264 24.576 24.576 24.576 13.824 0 24.576-11.264 24.576-24.576V426.496h70.144v217.6c0 13.824 11.264 24.576 24.576 24.576 13.824 0 24.576-10.752 24.576-24.576V426.496h16.896c16.896 0 29.184 3.584 36.352 10.752 10.24 10.24 10.24 29.184 10.24 40.448v166.4c0 13.824 11.264 24.576 24.576 24.576 13.312 0 24.576-10.752 24.576-25.088V477.696c0-16.384 0-50.176-24.576-75.264-16.896-16.384-40.448-25.088-71.168-25.088z" fill="#333333" p-id="1190"></path>
                        </g></svg>`
                    },
                    onClick: (_, e) => {
                        clickMeasureItem(e, "Polygon");
                    }
                }),
                dom.createHtmlElement('div', [], [], {
                    onInit: e => {
                        e.innerHTML = `<svg width="20" height="20" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1015">
                        <g fill="none" stroke="black">
                        <path stroke-width="40" d="M722.53 278.1V100.49H290V278.1H98.72v43H928v-43zM333 143.49h346.53V278.1H333zM780.8 883.35H231.71V383.89h-43v542.46H823.8V392.79h-43v490.56z" p-id="1016"></path>
                        <path stroke-width="40" d="M391.52 383.79h43V773.5h-43zM578 383.79h43V773.5h-43z" p-id="1017"></path>
                        </g></svg>`
                    },
                    onClick: () => {
                        this._manager.clear();
                    }
                })
            ]);

        const extend = new ExtendControl({
            content: container,
            position: this.options.position,
            os: 'pc',
            icon1: dom.createHtmlElement('div', [], [], {
                onInit: e => {
                    e.innerHTML = `<svg width="22" height="22" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3793">
                    <g fill="none" stroke="black">
                    <path stroke-width="30" d="M416 824.6L225.1 668.7 716 96.1 906.9 252z" fill="#C0C3C6" p-id="3794"></path>
                    <path stroke-width="30" d="M786 927.3c-4.5 0-8.8-1.6-12.2-4.4L524.5 713.8c-8.1-6.8-9.1-18.8-2.4-26.8 6.8-8 18.8-9.1 26.8-2.4l234.7 196.8L915 724.8 674.6 523.2c-8.1-6.8-9.1-18.8-2.4-26.8 6.8-8 18.8-9.1 26.8-2.4l255 213.9c8.1 6.8 9.1 18.8 2.4 26.8L800.6 920.5c-3.3 3.9-7.9 6.3-12.9 6.7-0.6 0.1-1.2 0.1-1.7 0.1zM340.2 553.5c-4.3 0-8.6-1.5-12.2-4.4L71 333.6c-8.1-6.8-9.1-18.8-2.4-26.8L224.4 121c6.8-8 18.8-9.1 26.8-2.4l253.5 212.6c8.1 6.8 9.1 18.8 2.4 26.8-6.8 8.1-18.7 9.1-26.8 2.4L241.4 160 110.1 316.6l242.3 203.2c8.1 6.8 9.1 18.8 2.4 26.8-3.8 4.6-9.2 6.9-14.6 6.9z" fill="#2E3742" p-id="3795"></path>
                    <path stroke-width="30" d="M238.8 318.2c-4.3 0-8.6-1.5-12.2-4.4-8.1-6.8-9.1-18.8-2.4-26.8l77.9-92.9c6.8-8 18.8-9.1 26.8-2.4 8.1 6.8 9.1 18.8 2.4 26.8l-77.9 92.9c-3.7 4.5-9.1 6.8-14.6 6.8zM379.3 364.8c-4.3 0-8.6-1.5-12.2-4.4-8.1-6.8-9.1-18.8-2.4-26.8l42.9-51.1c6.8-8.1 18.8-9.1 26.8-2.4 8.1 6.8 9.1 18.8 2.4 26.8L393.9 358c-3.8 4.5-9.2 6.8-14.6 6.8zM800.9 718.3c-4.3 0-8.6-1.5-12.2-4.4-8.1-6.8-9.1-18.8-2.4-26.8l42.9-51.1c6.8-8.1 18.8-9.1 26.8-2.4 8.1 6.8 9.1 18.8 2.4 26.8l-42.9 51.1c-3.7 4.5-9.1 6.8-14.6 6.8zM660.5 671.7c-4.3 0-8.6-1.5-12.2-4.4-8.1-6.8-9.1-18.8-2.4-26.8l77.9-92.9c6.8-8.1 18.8-9.1 26.8-2.4 8.1 6.8 9.1 18.8 2.4 26.8l-77.9 92.9c-3.8 4.5-9.2 6.8-14.6 6.8zM416 843.6c-4.2 0-8.5-1.4-12-4.3L213 683.5c-4-3.2-6.5-8-6.9-13.1-0.4-5.1 1.2-10.2 4.5-14.1L701.5 83.7c6.7-7.8 18.5-8.9 26.5-2.4l190.9 155.9c4 3.2 6.5 8 6.9 13.1 0.4 5.1-1.2 10.2-4.5 14.1L430.4 837c-3.7 4.4-9.1 6.6-14.4 6.6zM252.2 666.3l161.4 131.8 466.1-543.7-161.4-131.8-466.1 543.7z" fill="#2E3742" p-id="3796"></path><path d="M168.1 952.4c-4.3 0-8.6-1.5-12.1-4.3-5.3-4.3-7.8-11.1-6.8-17.8l40.9-251.4c1.7-10.4 11.6-17.4 21.9-15.8 10.4 1.7 17.4 11.5 15.8 21.9l-35.6 218.9 207.3-78.6c9.8-3.8 20.8 1.2 24.6 11 3.7 9.8-1.2 20.8-11 24.6L175 951.2c-2.4 0.8-4.7 1.2-6.9 1.2z" fill="#2E3742" p-id="3797"></path>
                    </g>
                    </svg>`
                }
            }).querySelector('svg')
        });

        return extend.onAdd(map);
    }

    removeControl(map: mapboxgl.Map): void {

    }

    getDefaultPosition = () => {
        return this.options.position;
    }
}